plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    id 'kotlin-kapt'
//    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-android'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'com.example.mvi_compose'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.mvi_compose"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "BASE_URL", "\"https://api.themoviedb.org/3/\"")
    }

    buildTypes {
        release {
//            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility  JavaVersion.VERSION_17
        targetCompatibility  JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget =  '17'
    }
    buildFeatures {
        compose true
        buildConfig true
        dataBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

// helpfull gradle task, which give us compose reports, perfomance
// with this compose compiler report, we can see which Composable functions are skippable, restartable, which Classes are stable or unstable
// it help us with perfomance, to find where could be bad UI perfomance
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += [
//               That means maybe some compose function will become skippable, but some non-restarble Compose function will become unskippable
                // In other words, that means some compose function will be better, have better perfomance, while some will have worse performance
//                "-P",
//                "plugin:androidx.compose.compiler.plugins.kotlin:experimentalStrongSkipping=true",

                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
                        project.buildDir.absolutePath + "/compose_metrics",
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination="+
                        project.buildDir.absolutePath + "/compose_metrics",

                // started to creating collections, localDateTime as stable and other classes
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:stabilityConfigurationPath=" +
                        "${rootDir.absolutePath}/stability-config.txt"
        ]
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0' // 2.3.1
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'

//    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material3:material3-android:1.2.1'
    implementation 'androidx.compose.material:material-icons-extended:1.6.2'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha13'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
// 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "com.google.truth:truth:1.1.3"

    testImplementation "org.mockito:mockito-core:5.8.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    implementation("org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5")

    implementation 'io.coil-kt:coil-compose:2.4.0'

    implementation 'androidx.compose.material:material:1.6.1'
    implementation 'androidx.navigation:navigation-compose:2.7.7'

    // networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'
    implementation 'com.squareup.moshi:moshi-adapters:1.14.0'
    implementation 'com.squareup.moshi:moshi-kotlin-codegen:1.14.0'
//    implementation 'org.conscrypt:conscrypt-android:2.2.1'
    
    // room database 
    implementation 'androidx.room:room-runtime:2.6.1'
    ksp 'androidx.room:room-compiler:2.6.1' // kapt "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
 
    // dependency injection
    implementation 'com.google.dagger:hilt-android:2.48.1'
    ksp 'com.google.dagger:hilt-android-compiler:2.48.1' // kapt 'com.google.dagger:hilt-android-compiler:2.48.1'
    ksp 'com.google.dagger:hilt-compiler:2.48.1' //  kapt 'com.google.dagger:hilt-compiler:2.48.1' //2.50 // 2.48.1
//    kapt "androidx.hilt:hilt-compiler:1.2.0-rc01"
    ksp 'androidx.hilt:hilt-compiler:1.2.0-rc01' // kapt 'androidx.hilt:hilt-compiler:1.2.0-rc01'
//    annotationProcessor 'androidx.hilt:hilt-compiler:1.2.0-rc01'
//    annotationProcessor 'com.google.dagger:hilt-compiler:2.50'
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'

    // location provider
    implementation 'com.google.android.gms:play-services-location:21.1.0'

    // app companist, runtime permisssion
    implementation 'com.google.accompanist:accompanist-permissions:0.29.1-alpha'

    // rxJava dependecies
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.8'

    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    // recyclerView
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    // tensorflow lite
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.9.0'
    implementation 'org.tensorflow:tensorflow-lite-task-vision-play-services:0.4.2'

    // camera core
    implementation 'androidx.camera:camera-core:1.3.2'
    implementation 'androidx.camera:camera-camera2:1.3.2'
    implementation 'androidx.camera:camera-view:1.3.2'
}